import cv2
import numpy as np

# Read an image
a = cv2.imread('baboon encrypted.bmp')

# Get the dimensions of the image
h, w, c = a.shape

# Inverse S-box array
sbox = [
    174, 247, 193, 179, 25, 21, 93, 220, 126, 130, 33, 197, 131, 89, 212, 36,
    117, 162, 237, 184, 166, 243, 168, 86, 233, 63, 152, 216, 133, 186, 58, 124,
    49, 155, 70, 55, 157, 136, 151, 194, 164, 30, 54, 67, 171, 159, 224, 7,
    115, 217, 106, 180, 142, 41, 129, 24, 255, 4, 198, 165, 122, 68, 35, 37,
    177, 137, 219, 42, 173, 51, 209, 239, 167, 232, 120, 26, 221, 19, 205, 101,
    178, 18, 188, 96, 125, 74, 118, 2, 123, 53, 201, 191, 148, 141, 128, 218,
    62, 14, 100, 231, 46, 145, 241, 245, 250, 182, 99, 45, 23, 200, 170, 79,
    236, 158, 183, 223, 13, 95, 185, 110, 169, 195, 202, 0, 109, 94, 215, 147,
    27, 234, 112, 1, 9, 226, 163, 57, 47, 146, 206, 11, 40, 75, 254, 91,
    246, 249, 15, 84, 32, 17, 227, 138, 87, 225, 222, 34, 127, 6, 76, 154,
    56, 175, 16, 229, 153, 5, 102, 208, 90, 105, 28, 211, 8, 204, 29, 77,
    235, 98, 108, 172, 88, 187, 199, 20, 59, 72, 132, 210, 252, 150, 160, 80,
    113, 92, 78, 251, 135, 97, 52, 3, 81, 39, 22, 12, 73, 10, 111, 244,
    230, 207, 60, 50, 238, 140, 161, 44, 149, 253, 107, 116, 248, 203, 31, 181,
    103, 143, 214, 114, 71, 38, 190, 104, 65, 121, 213, 66, 43, 240, 82, 48,
    196, 119, 242, 192, 189, 83, 139, 69, 156, 176, 134, 85, 64, 61, 228, 144
]

# Reshape the S-box array into a 16x16 matrix
sbox1 = np.array(sbox).reshape((16, 16))

# Iterate over each pixel
for i in range(h):
    for j in range(w):
        for k in range(c):
            binary_pixel = format(a[i, j, k], '08b')
            lsb = binary_pixel[:4]  # LSB
            msb = binary_pixel[4:]  # MSB
            row_index = int(lsb, 2)
            col_index = int(msb, 2)
            a[i, j, k] = sbox1[row_index, col_index]

# Display the image
cv2.imshow('Decrypted Image', a)
cv2.waitKey(0)
cv2.destroyAllWindows()

# Save the image
cv2.imwrite('decrypted.jpg', a)
